# Generated by Django 5.1.7 on 2025-05-10 23:33

import django.db.models.deletion
import django.utils.timezone
import uuid
import workflows.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        verbose_name="username",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email address"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="workflow_user_set",
                        related_query_name="workflow_user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="workflow_user_set",
                        related_query_name="workflow_user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "db_table": "auth_user",
                "swappable": "AUTH_USER_MODEL",
            },
            managers=[
                ("objects", workflows.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Workflow",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "workflow_type",
                    models.CharField(
                        choices=[
                            (
                                "MATRIX_ADDITION",
                                "Addition de matrices de grande taille",
                            ),
                            (
                                "MATRIX_MULTIPLICATION",
                                "Multiplication de matrices de grande taille",
                            ),
                            ("ML_TRAINING", "Entraînement de modèle machine learning"),
                            ("CUSTOM", "Workflow personnalisé"),
                        ],
                        default="MATRIX_ADDITION",
                        max_length=30,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("CREATED", "Créé"),
                            ("VALIDATED", "Validé"),
                            ("SUBMITTED", "Soumis"),
                            ("SPLITTING", "En découpage"),
                            ("ASSIGNING", "En attribution"),
                            ("PENDING", "En attente"),
                            ("RUNNING", "En exécution"),
                            ("PAUSED", "En pause"),
                            ("PARTIAL_FAILURE", "Échec partiel"),
                            ("REASSIGNING", "Réattribution"),
                            ("AGGREGATING", "Agrégation"),
                            ("COMPLETED", "Terminé"),
                            ("FAILED", "Échoué"),
                        ],
                        default="CREATED",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("submitted_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("priority", models.IntegerField(default=1)),
                ("tags", models.JSONField(blank=True, default=list)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("max_execution_time", models.IntegerField(default=3600)),
                ("retry_count", models.IntegerField(default=3)),
                (
                    "executable_path",
                    models.CharField(
                        blank=True, help_text="Chemin vers l'exécutable", max_length=500
                    ),
                ),
                (
                    "input_path",
                    models.CharField(
                        blank=True,
                        help_text="Chemin des données d'entrée",
                        max_length=500,
                    ),
                ),
                (
                    "input_data_size",
                    models.IntegerField(
                        default=0, help_text="Taille des données d'entrée en Mo"
                    ),
                ),
                (
                    "output_path",
                    models.CharField(
                        blank=True,
                        help_text="Chemin où stocker les résultats",
                        max_length=500,
                    ),
                ),
                (
                    "estimated_resources",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Ressources estimées pour le workflow (ex. RAM, CPU...)",
                    ),
                ),
                (
                    "preferences",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Critères souhaités pour les volontaires (type de volontaire, ressources disponibles...)",
                    ),
                ),
                (
                    "workflow_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Identifiant unique du workflow",
                        unique=True,
                    ),
                ),
                (
                    "coordinator_workflow_id",
                    models.UUIDField(
                        blank=True,
                        help_text="Identifiant du workflow venant du coordinnateur du système",
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        default=workflows.models.get_default_owner,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Workflow",
                "verbose_name_plural": "Workflows",
                "ordering": ["-created_at"],
            },
        ),
    ]
