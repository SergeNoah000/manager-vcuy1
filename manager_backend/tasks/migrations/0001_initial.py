# Generated by Django 5.1.7 on 2025-05-10 23:33

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("command", models.CharField(max_length=500)),
                ("parameters", models.JSONField(default=list)),
                ("dependencies", models.JSONField(default=list)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("CREATED", "Créée"),
                            ("PENDING", "En attente"),
                            ("ASSIGNED", "Assignée"),
                            ("RUNNING", "En cours"),
                            ("COMPLETED", "Terminée"),
                            ("FAILED", "Échouée"),
                            ("RETRYING", "En réessai"),
                            ("CANCELLED", "Annulée"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("is_subtask", models.BooleanField(default=False)),
                ("progress", models.FloatField(default=0)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("start_time", models.DateTimeField(blank=True, null=True)),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                ("required_resources", models.JSONField(default=dict)),
                (
                    "estimated_max_time",
                    models.FloatField(default=0, help_text="Durée estimée en secondes"),
                ),
                ("attempts", models.IntegerField(default=0)),
                ("results", models.JSONField(blank=True, default=dict, null=True)),
                (
                    "error_details",
                    models.JSONField(blank=True, default=dict, null=True),
                ),
                ("docker_info", models.JSONField(default=dict)),
                (
                    "volunteer_preference",
                    models.CharField(
                        choices=[
                            ("ANY", "N'importe lequel"),
                            ("TRUSTED", "Volontaires de confiance"),
                            ("HIGH_MEMORY", "Machines à haute mémoire"),
                            ("LOW_LATENCY", "Faible latence"),
                        ],
                        default="ANY",
                        max_length=20,
                    ),
                ),
                ("input_files", models.JSONField(default=list)),
                (
                    "input_size",
                    models.IntegerField(
                        default=0, help_text="Taille des fichiers d'entrée en Mo"
                    ),
                ),
                ("output_files", models.JSONField(default=list)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "assigned_to",
                    models.JSONField(
                        blank=True,
                        help_text="Identifiant du volontaire assigné",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "parent_task",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subtasks",
                        to="tasks.task",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tâche",
                "verbose_name_plural": "Tâches",
                "ordering": ["-is_subtask", "created_at"],
            },
        ),
    ]
